{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../board-card/board-card.component\";\nfunction BoardComponent_board_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"board-card\", 4);\n    i0.ɵɵlistener(\"click\", function BoardComponent_board_card_2_Template_board_card_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.setStatus(i_r3));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pokemon_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pokemon\", pokemon_r2)(\"flip\", ctx_r0.positions[i_r3]);\n  }\n}\nfunction BoardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"p\", 7);\n    i0.ɵɵtext(3, \"Congrats ! You won the battle !\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_3_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.resetGame());\n    });\n    i0.ɵɵtext(5, \" Let's go ! \");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class BoardComponent {\n  constructor() {\n    this.team = [];\n    this.myData = new EventEmitter();\n    this.positions = [\"inactive\", \"inactive\", \"inactive\", \"inactive\", \"inactive\", \"inactive\", \"inactive\", \"inactive\", \"inactive\", \"inactive\", \"inactive\", \"inactive\"];\n  }\n  ngOnInit() {\n    this.team.push(...this.team);\n    this.team = this.team.sort((a, b) => 0.5 - Math.random());\n  }\n  // Set the status of the clicked card\n  setStatus(index) {\n    if (this.positions[index] != \"correct\") {\n      // If there is only one active card, set the status of the clicked card to active\n      if (this.positions.filter(currentElement => currentElement == \"active\").length == 1 || this.positions.filter(currentElement => currentElement == \"active\").length == 0) {\n        console.log(this.positions.filter(currentElement => currentElement == \"active\").length);\n        this.positions[index] = \"active\";\n      }\n      // Wait 1.5 seconds\n      setTimeout(() => {\n        // Filter the array to get the active cards\n        let activeCards = this.positions.map((status, index) => ({\n          status,\n          index\n        })).filter(currentElement => currentElement.status == \"active\");\n        // If there are two active cards, check if they are the same\n        if (activeCards.length == 2) {\n          // If they are the same, alert the user\n          if (this.team[activeCards[0].index] == this.team[activeCards[1].index]) {\n            this.positions[activeCards[0].index] = \"correct\";\n            this.positions[activeCards[1].index] = \"correct\";\n            // If they are not the same, set the status of both cards to inactive\n          } else {\n            this.positions[activeCards[0].index] = \"incorrect\";\n            this.positions[activeCards[1].index] = \"incorrect\";\n            setTimeout(() => {\n              this.positions.forEach((currentElement, index) => {\n                if (currentElement == \"incorrect\") {\n                  this.positions[index] = 'inactive';\n                }\n              });\n            }, 1500);\n          }\n        }\n      }, 1500);\n    }\n  }\n  resetGame() {\n    this.team = [];\n    this.myData.emit(this.team);\n  }\n}\nBoardComponent.ɵfac = function BoardComponent_Factory(t) {\n  return new (t || BoardComponent)();\n};\nBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardComponent,\n  selectors: [[\"app-board\"]],\n  inputs: {\n    team: \"team\"\n  },\n  outputs: {\n    myData: \"myData\"\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"container\", \"mx-auto\", \"flex\", \"flex-col\", \"justify-center\", \"items-center\", \"mt-24\"], [1, \"grid\", \"grid-cols-3\", \"gap-2\", \"md:grid-cols-4\", \"md:gap-5\"], [3, \"pokemon\", \"flip\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"bg-black bg-opacity-60 absolute top-0 h-full w-full\", 4, \"ngIf\"], [3, \"pokemon\", \"flip\", \"click\"], [1, \"bg-black\", \"bg-opacity-60\", \"absolute\", \"top-0\", \"h-full\", \"w-full\"], [1, \"container\", \"mx-auto\", \"flex\", \"flex-col\", \"justify-center\", \"items-center\", \"mt-14\", \"p-48\", \"bg-white\", \"rounded-lg\"], [1, \"text-8xl\", \"text-center\", \"text-transparent\", \"font-bold\", \"bg-clip-text\", \"bg-gradient-to-r\", \"from-purple-400\", \"to-pink-600\", \"background-animate\"], [\"type\", \"button\", 1, \"mt-20\", \"rounded-lg\", \"font-bold\", \"bg-gradient-to-r\", \"from-purple-400\", \"to-pink-600\", \"px-6\", \"py-2\", \"text-xl\", \"text-white\", \"transition\", \"transform\", \"duration-300\", \"ease-in-out\", \"hover:scale-110\", 3, \"click\"]],\n  template: function BoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, BoardComponent_board_card_2_Template, 1, 2, \"board-card\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(3, BoardComponent_div_3_Template, 6, 0, \"div\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.team);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.positions.includes(\"inactive\") && !ctx.positions.includes(\"active\"));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.BoardCardComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","BoardComponent","constructor","ngOnInit","team","push","sort","a","b","Math","random","setStatus","index","positions","filter","currentElement","length","console","log","setTimeout","activeCards","map","status","forEach","resetGame","myData","emit","selectors","inputs","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/alexisleloup/GitHub/angular-memory-game/src/app/components/board/board.component.ts","/Users/alexisleloup/GitHub/angular-memory-game/src/app/components/board/board.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\n\nexport class BoardComponent implements OnInit {\n\n  @Input() team: Array<any> = [];\n  @Output() myData: EventEmitter<any> = new EventEmitter<any>();\n\n  positions: Array<string> = [\n    \"inactive\",\n    \"inactive\",\n    \"inactive\",\n    \"inactive\",\n    \"inactive\",\n    \"inactive\",\n    \"inactive\",\n    \"inactive\",\n    \"inactive\",\n    \"inactive\",\n    \"inactive\",\n    \"inactive\",\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.team.push(...this.team);\n    this.team = this.team.sort((a, b) => 0.5 - Math.random())\n  }\n\n  // Set the status of the clicked card\n  public setStatus(index: number) {\n\n\n    if (this.positions[index] != \"correct\") {\n\n      // If there is only one active card, set the status of the clicked card to active\n      if (this.positions.filter((currentElement) => currentElement == \"active\").length == 1 || this.positions.filter((currentElement) => currentElement == \"active\").length == 0) {\n        console.log(this.positions.filter((currentElement) => currentElement == \"active\").length)\n        this.positions[index] = \"active\";\n      }\n\n      // Wait 1.5 seconds\n      setTimeout(() => {\n\n        // Filter the array to get the active cards\n        let activeCards = this.positions\n        .map((status, index) => ({ status, index }))\n        .filter((currentElement) => currentElement.status == \"active\");\n\n        // If there are two active cards, check if they are the same\n        if (activeCards.length == 2) {\n\n          // If they are the same, alert the user\n          if (this.team[activeCards[0].index] == this.team[activeCards[1].index]) {\n            this.positions[activeCards[0].index] = \"correct\";\n            this.positions[activeCards[1].index] = \"correct\";\n\n          // If they are not the same, set the status of both cards to inactive\n          } else {\n            this.positions[activeCards[0].index] = \"incorrect\";\n            this.positions[activeCards[1].index] = \"incorrect\";\n            \n            setTimeout(() => {\n              this.positions.forEach((currentElement, index) => {\n                if (currentElement == \"incorrect\") {\n                  this.positions[index] = 'inactive';\n                }\n              });\n            }, 1500);\n          }\n        }}, 1500);\n      }\n  }\n\n  public resetGame() {\n    this.team = [];\n    this.myData.emit(this.team);\n  }\n\n}\n","<div class=\"container mx-auto flex flex-col justify-center items-center mt-24\">\n    <div class=\"grid grid-cols-3 gap-2 md:grid-cols-4 md:gap-5\">\n        <board-card *ngFor=\"let pokemon of team; let i = index\" (click)=\"setStatus(i)\" [pokemon]=\"pokemon\" [flip]=\"this.positions[i]\"></board-card>\n    </div>\n\n</div>\n<div class=\"bg-black bg-opacity-60 absolute top-0 h-full w-full\" *ngIf=\"!this.positions.includes('inactive') && !this.positions.includes('active')\">\n    <div class=\"container mx-auto flex flex-col justify-center items-center mt-14 p-48 bg-white rounded-lg\">\n        <p class=\"text-8xl text-center text-transparent font-bold bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600 background-animate\">Congrats ! You won the battle !</p>\n        <button type=\"button\"\n        class=\"mt-20 rounded-lg font-bold bg-gradient-to-r from-purple-400 to-pink-600 px-6 py-2 text-xl text-white transition transform duration-300 ease-in-out hover:scale-110\"\n        (click)=\"this.resetGame()\"\n    >\n        Let's go !\n    </button>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}